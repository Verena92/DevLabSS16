//created on: 06.05.2016
package de.hdm.wim.events;

import de.hdm.wim.events.model.Token;
import de.hdm.wim.events.model.Project;
import de.hdm.wim.events.model.Document

import de.hdm.wim.events.documentrepresentation.DocumentRepresentationRequester;
import de.hdm.wim.events.speechtokenizer.SpeechTokenSender;

global java.util.List resultList;

declare Token
    @role( event )
    @timestamp( timestamp.getTime() ) //long
end

rule "A Token occured" dialect "mvel"
  when
      $t : Token() from entry-point SpeechTokenEventStream
  then
  	  resultList.add( "A Token occured");
      System.out.println( "A Token occured!"); 
end

rule "A Token with related project P001 occured"
    when
        $t : Token( keywordInformation.projects contains "P001") from entry-point SpeechTokenEventStream   
    then
      resultList.add( "A Token with related project P001 occured");
      System.out.println( "A Token wth related project P001 occured"); 
end

rule "A Token with exactly 1 related project occured"
    when
        $t : Token( keywordInformation.projects.size() == 1, 
        			keywordInformation.companies.empty,
        			keywordInformation.products.empty,
        			keywordInformation.employees.empty) from entry-point SpeechTokenEventStream 
    then
      resultList.add( "A Token with exactly 1 related project occured");
      System.out.println( "A Token with exactly 1 related project occured"); 
      
      DocumentRepresentationRequester requester = new DocumentRepresentationRequester();
      Project project = requester.getProject("P0001");
      System.out.println( "requested project: " + project);
      Document document = requester.getDocument();
      System.out.println( "found document: " + document);
      SpeechTokenSender sender = new SpeechTokenSender();
      sender.sendDocument( document);
end

rule "A Token with exactly 1 related company occured"
    when
        $t : Token( keywordInformation.projects.empty, 
        			keywordInformation.companies.size() == 1,
        			keywordInformation.products.empty,
        			keywordInformation.employees.empty) from entry-point SpeechTokenEventStream 
    then
      resultList.add( "A Token with exactly 1 related company occured");
      System.out.println( "A Token with exactly 1 related company occured"); 
end

rule "A Token with exactly 1 related product occured"
    when
        $t : Token( keywordInformation.projects.empty, 
        			keywordInformation.companies.empty,
        			keywordInformation.products.size() == 1,
        			keywordInformation.employees.empty) from entry-point SpeechTokenEventStream 
    then
      resultList.add( "A Token with exactly 1 related product occured");
      System.out.println( "A Token with exactly 1 related product occured"); 
end

rule "A Token with exactly 1 related employee occured"
    when
        $t : Token( keywordInformation.projects.empty, 
        			keywordInformation.companies.empty,
        			keywordInformation.products.empty,
        			keywordInformation.employees.size() == 1) from entry-point SpeechTokenEventStream 
    then
      resultList.add( "A Token with exactly 1 related employee occured");
      System.out.println( "A Token with exactly 1 related employee occured"); 
end

//rule "Request a document"
 //   when
  //      $p : Project();
   // then
    //  resultList.add( "request a document");
    //  System.out.println( "request a document"); 
    // DocumentRepresentationRequester requester = new DocumentRepresentationRequester();
//end


